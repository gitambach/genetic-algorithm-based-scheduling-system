
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div id="classType" class="pull-right">Lecture</div>
                    <label for="courseTitle">Course Title</label> 
                     <input class="form-control" type="text" id="courseTitle" disabled />
                    <label for="instrucotr">Instructor Name</label>  
                    <input class="form-control" type="text" id="instructorName" disabled />
                    <label for="room">Room</label> 
                    <input class="form-control" type="text" id="Room" disabled />
                    
                    
                   
                </div>

            </div>
        </div>
    </div>
</div>

<div id='calendar'></div>


@section scripts
{
    <script>
        $(document).ready(function () {

            var events = [];

            $.ajax({
                url: '/api/Schedules',
                method: 'GET',
                success: function (data) {
                    $.each(data[0].days, function (i, day) {

                        $.each(day.periods, function (j, period) {
                            events.push({
                                title: period.course != null ? period.course.acronym : null,
                                description: period.course != null ? period.course.title : null,

                                //description:period.instructor !=null ? period.instructor.name:null,
                                start: moment().weekday(day.dayNumber + 1).set({
                                    hour: determineStartHour(period.period),
                                    minute: determineStartMinute(period.period),
                                    second: 0
                                }),
                                end: moment().weekday(day.dayNumber + 1).set({
                                    hour: determineEndHour(period.period),
                                    minute: determineEndMinute(period.period),
                                    second: 0
                                }),
                                color: period.course != null ? '#' + period.course.color.toString(16) : '#fbb202',
                                dayName: day.dayName,
                                periodData: period

                            });
                        });
                    });
                    displaySchedule(events);
                },
                error: function (error) {
                    alert('failed');
                }
            });



            function displaySchedule(events) {

                $('#calendar').fullCalendar('destroy');
                // page is now ready, initialize the calendar...
                $('#calendar').fullCalendar({
                    // put your options and callbacks here
                    defaultView: 'agendaWeek', // options are: month, basicWeek, agendaWeek, agendaDay
                    //defaultView: 'agendaFourDay',
                    //views: {
                    //    agendaFourDay: {
                    //        type: 'agenda',
                    //        duration: { days: 3 }
                    //    }
                    //},
                    //defaultDate: '2018-03-12',
                    //contentHeight: 'auto',
                    navLinks: true, // can click week names to navigate views
                    columnHeaderFormat: 'dddd', // Determines the text that will be displayed on the calendar’s column headings
                    allDaySlot: false, // Determines if the “all-day” slot is displayed at the top of the calendar
                    allDayText: 'my-day', // The text titling the “all-day” slot at the top of the calendar.
                    minTime: "02:30:00",
                    maxTime: "11:30:00",
                    slotDuration: "00:50:00",
                    weekNumbers: false, //Determines if week numbers should be displayed on the calendar
                    contentHeight: 400,
                    displayEventEnd: true, // Whether or not to display an event’s end time
                    eventRender: function (event, element) {
                        element.css("font-size", "1.2em");
                        //element.css("padding", "15px");
                    },
                    header: {
                        left: 'title',
                        center: 'today',
                        right: 'prev,next basicWeek, basicDay, agenda'
                    },
                    weekends: false, // will hide Saturdays and Sundays
                    //dayClick: function () {
                    //    //alert('a day has been clicked!');
                    //},
                    events: events,

                    eventClick: function (calEvent, jsEvent, view) {
                        var period = calEvent.periodData.period + 1;
                        $('#myModal #eventTitle').text(calEvent.dayName + '(' + period + ')');
                        $('#myModal #courseTitle').val(calEvent.description);
                        $('#myModal #instructorName').val(calEvent.periodData.instructor.fullName)
                        $('#myModal #Room').val(calEvent.periodData.room.name)
                        if (calEvent.isLab) {
                            $('#classType').html('Lab');
                        }
                        $('#myModal').modal('show');
                    }

                    //[
                    //    {
                    //        title: 'All Day Event',
                    //        start: moment().weekday(1).set({
                    //            hour: 2,
                    //            minute: 30,
                    //            second: 0
                    //        }),
                    //        end: moment().weekday(1).set({
                    //            hour: 3,
                    //            minute: 20,
                    //            second: 0
                    //        }),
                    //        backgroundColor: "#ff0000"
                    //    },
                    //    {
                    //        title: 'Long Event',
                    //        start: '2018-04-19',
                    //        end: '2018-04-21'
                    //    },
                    //    {
                    //        id: 999,
                    //        title: 'C++',
                    //        start: moment('2018-04-19 02:30:00'),
                    //        end: moment('2018-04-19 03:20:00'),
                    //        color: '#257e4a',
                    //        //backgroundColor: "#ff0000",
                    //        durationEditable: true
                    //        //rendering: 'inverse-background'
                    //    },
                    //    {
                    //        id: 999,
                    //        title: 'Java',
                    //        start: moment('2018-04-19 03:25:00'),
                    //        end: moment('2018-04-19 04:15:00')
                    //    },
                    //    {
                    //        title: 'Conference',
                    //        start: '2018-03-11',
                    //        end: '2018-03-13'
                    //    },
                    //    {
                    //        title: 'Meeting',
                    //        start: '2018-03-12T10:30:00',
                    //        end: '2018-03-12T12:30:00'
                    //    },
                    //    {
                    //        title: 'Lunch',
                    //        start: '2018-03-12T12:00:00'
                    //    },
                    //    {
                    //        title: 'Meeting',
                    //        start: '2018-03-12T14:30:00'
                    //    },
                    //    {
                    //        title: 'Happy Hour',
                    //        start: '2018-03-12T17:30:00'
                    //    },
                    //    {
                    //        title: 'Dinner',
                    //        start: '2018-03-12T20:00:00'
                    //    },
                    //    {
                    //        title: 'Birthday Party',
                    //        start: '2018-03-13T07:00:00'
                    //    },
                    //    {
                    //        title: 'Click for Google',
                    //        url: 'http://google.com/',
                    //        start: '2018-03-28'
                    //    }
                    //]
                })
            }
        });

        function determineStartHour(period) {
            switch (period) {
                case 0:
                    return 2;
                case 1:
                    return 3;
                case 2:
                    return 4;
                case 3:
                    return 5;
                case 4:
                    return 7;
                case 5:
                    return 8;
                case 6:
                    return 9;
                case 7:
                    return 10;
            }
        }

        function determineEndHour(period) {
            switch (period) {
                case 0:
                    return 3;
                case 1:
                    return 4;
                case 2:
                    return 5;
                case 3:
                    return 6;
                case 4:
                    return 8;
                case 5:
                    return 9;
                case 6:
                    return 10;
                case 7:
                    return 11;
            }
        }

        function determineStartMinute(period) {
            switch (period) {
                case 0:
                    return 30;
                case 1:
                    return 25;
                case 2:
                    return 20;
                case 3:
                    return 15;
                case 4:
                    return 30;
                case 5:
                    return 25;
                case 6:
                    return 20;
                case 7:
                    return 15;
            }
        }

        function determineEndMinute(period) {
            switch (period) {
                case 0:
                    return 20;
                case 1:
                    return 15;
                case 2:
                    return 10;
                case 3:
                    return 5;
                case 4:
                    return 20;
                case 5:
                    return 15;
                case 6:
                    return 10;
                case 7:
                    return 5;
            }
        }
    </script>
}